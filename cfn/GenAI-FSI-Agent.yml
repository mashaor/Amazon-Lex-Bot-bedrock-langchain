AWSTemplateFormatVersion: "2010-09-09"
Description: "GenAI Agent powered by Amazon Bedrock, AWS Lambda, Amazon Lex, and Amazon Kendra"
Metadata:
  LICENSE: >-
    Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

    Permission is hereby granted, free of charge, to any person obtaining a copy of this
    software and associated documentation files (the "Software"), to deal in the Software
    without restriction, including without limitation the rights to use, copy, modify,
    merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: S3 Bucket, Lambda and Lex Deployment Package Keys, and Lambda Layer ARNs
        Parameters:
          - S3ArtifactBucket
          - LambdaHandlerS3Key
          - LexBotS3Key
          - BedrockLangChainPDFRWLayerArn
          - CfnresponseLayerArn
      - Label:
          default: Kendra Web Crawler Root Domain
        Parameters:
          - KendraWebCrawlerUrl
    ParameterLabels:
      S3ArtifactBucket:
        default: your-s3-bucket-name
      LambdaHandlerS3Key:
        default: /agent/lambda/agent-handler/agent_deployment_package.zip
      LexBotS3Key:
        default: /agent/bot/lex.zip
      BedrockLangChainPDFRWLayerArn:
        default: bedrock-layer-arn
      CfnresponseLayerArn:
        default: cfnresponse-layer-arn
      KendraWebCrawlerUrl:
        default: your-kendra-root-domain

Parameters:
  S3ArtifactBucket:
    Description: S3 Bucket Containing Lambda Handler, and Lex Deployment Packages
    Type: String
    Default: your-s3-bucket-name
  LambdaHandlerS3Key:
    Description: S3 Key for Lambda handler.
    Type: String
    Default: /agent/lambda/agent-handler/agent_deployment_package.zip
  LexBotS3Key:
    Description: S3 key for Lex bot deployment package. 
    Type: String
    Default: /agent/bot/lex.zip
  BedrockLangChainPDFRWLayerArn:
    Description: Bedrock LangChain PDFRW Lambda layer ARN.
    Type: String
    Default: bedrock-layer-arn
  CfnresponseLayerArn:
    Description: cfnresponse Lambda layer ARN.
    Type: String
    Default: cfnresponse-layer-arn
  KendraWebCrawlerUrl:
    Description: Kendra Web Crawler root domain URL. 
    Type: String
    Default: your-kendra-root-domain

Resources:
  AgentHandlerServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AWS::StackName}-AgentHandlerServiceRole
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  AgentHandlerServiceRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub ${AWS::StackName}-AgentHandlerServiceRoleDefaultPolicy
      PolicyDocument:
        Statement:
          - Action:
              - lambda:InvokeFunction
              - bedrock:InvokeModel
              - bedrock:Retrieve
              - bedrock:ListFoundationModels
              - kendra:Query
              - kendra:Retrieve
              - kendra:BatchGetDocumentStatus
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource: '*'        
        Version: 2012-10-17
      Roles:
        - !Ref AgentHandlerServiceRole

  AgentHandlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda handler for GenAI FSI Agent.
      FunctionName: !Sub ${AWS::StackName}-GenAILexHandler
      Code:
        S3Bucket: !Ref S3ArtifactBucket
        S3Key: !Ref LambdaHandlerS3Key
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: lambda_function.handler
      Layers:
        - !Ref BedrockLangChainPDFRWLayerArn
      Role: !GetAtt AgentHandlerServiceRole.Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          KENDRA_INDEX_ID: !GetAtt KendraIndex.Id
          S3_ARTIFACT_BUCKET_NAME: !Ref S3ArtifactBucket

  LexLambdaPermissions:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !Ref AgentHandlerFunction
      Principal: 'lexv2.amazonaws.com'

  KendraLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${AWS::StackName}-KendraLogGroup
      RetentionInDays: 7

  KendraLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref KendraLogGroup
      LogStreamName: !Sub ${AWS::StackName}-KendraLogStream
    DependsOn: KendraLogGroup

  KendraIndexRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-KendraIndexRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - kendra.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: !Sub ${AWS::StackName}-KendraIndexPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action: logs:DescribeLogGroups
            Resource: '*'
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:DescribeLogStreams'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*'

  KendraIndex:
    Type: AWS::Kendra::Index
    Properties:
      Edition: DEVELOPER_EDITION
      Name: !Sub ${AWS::StackName}-KendraIndex
      RoleArn: !GetAtt KendraIndexRole.Arn

  KendraDataSourceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-KendraDataSourceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - kendra.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: !Sub ${AWS::StackName}-KendraDataSourcePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 's3:GetObject'
            - 's3:GetBucketLocation'
            - 's3:ListBucket'
            - 's3:GetBucketAcl'
            - 's3:GetObjectAcl'
            Resource:
            - !Sub arn:aws:s3:::${S3ArtifactBucket}
            - !Sub arn:aws:s3:::${S3ArtifactBucket}/*
          - Effect: Allow
            Action:
            - 'kendra:PutPrincipalMapping'
            - 'kendra:DeletePrincipalMapping'
            - 'kendra:ListGroupsOlderThanOrderingId'
            - 'kendra:DescribePrincipalMapping'
            - 'kendra:BatchPutDocument'
            - 'kendra:BatchDeleteDocument'
            Resource: '*'

  KendraWebCrawler:
    DependsOn: KendraIndex
    Type: AWS::Kendra::DataSource
    Properties:
      Name: !Sub ${AWS::StackName}-WebCrawler
      Type: WEBCRAWLER
      IndexId: !GetAtt KendraIndex.Id
      RoleArn: !GetAtt KendraDataSourceRole.Arn
      DataSourceConfiguration:
        WebCrawlerConfiguration: 
            CrawlDepth: 3
            MaxContentSizePerPageInMegaBytes: 50
            MaxLinksPerPage: 20
            MaxUrlsPerMinuteCrawlRate: 100
            Urls: 
              SeedUrlConfiguration:
                SeedUrls: 
                  - !Ref KendraWebCrawlerUrl
                WebCrawlerMode: SUBDOMAINS

  LexBotRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-LexBotRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-LexBotRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'polly:SynthesizeSpeech'
                  - 'comprehend:DetectSentiment'
                  - 'bedrock:InvokeModel'
                  - 'bedrock:Retrieve'
                  - 'bedrock:ListFoundationModels'
                Resource: "*"

  LexBot:
    DependsOn: LexBotRole
    Type: AWS::Lex::Bot
    Properties:
        Name: !Sub ${AWS::StackName}-FSI-Agent
        BotFileS3Location: 
          S3Bucket: !Ref S3ArtifactBucket
          S3ObjectKey: !Ref LexBotS3Key
        DataPrivacy: 
          ChildDirected: false
        Description: 'Financial Services Agent'
        IdleSessionTTLInSeconds: 900
        RoleArn: !GetAtt LexBotRole.Arn

Outputs:
  KendraIndexID:
    Value: !GetAtt KendraIndex.Id
  KendraWebCrawlerDataSourceID:
    Value: !GetAtt KendraWebCrawler.Id
  KendraDataSourceRoleARN:
    Value: !GetAtt KendraDataSourceRole.Arn
  LambdaARN:
    Value: !GetAtt AgentHandlerFunction.Arn
  LexBotID:
    Value: !GetAtt LexBot.Id
